server:
  port: 18081

spring:
  application:
    name: kugga-server-duke
  autoconfigure:
    exclude:
      - com.hisun.kugga.framework.apilog.config.KuggaApiLogAutoConfiguration

  profiles:
    active: dev

  main:
    allow-circular-references: true # 允许循环依赖，因为项目是三层架构，无法避免这个情况。

  # Servlet 配置
  servlet:
    # 文件上传相关配置项
    multipart:
      max-file-size: 16MB # 单个文件大小
      max-request-size: 32MB # 设置总上传的文件大小
  mvc:
    pathmatch:
      matching-strategy: ANT_PATH_MATCHER # 解决 SpringFox 与 SpringBoot 2.6.x 不兼容的问题，参见 SpringFoxHandlerProviderBeanPostProcessor 类

  # Jackson 配置项
  jackson:
    serialization:
      write-dates-as-timestamps: true # 设置 Date 的格式，使用时间戳
      write-date-timestamps-as-nanoseconds: false # 设置不使用 nanoseconds 的格式。例如说 1611460870.401，而是直接 1611460870401
      write-durations-as-timestamps: true # 设置 Duration 的格式，使用时间戳
      fail-on-empty-beans: false # 允许序列化无属性的 Bean

  # Cache 配置项
  cache:
    type: REDIS
    redis:
      time-to-live: 1h # 设置过期时间为 1 小时

  redisson:
    #    依赖当前环境redis
    address: redis://${spring.redis.host}:${spring.redis.port}
    password: ${spring.redis.password}
    lock:
      #      锁等待时间
      wait-time: 30
      #      锁自动释放时间，要大于业务执行时间
      lease-time: 120

  socketio:
    redis:
      redisson:
        enabled: true
        server: single
        single:
          address: redis://10.9.50.103:6379
          password: '******'
          client-name: socketio-redis
          connection-minimum-idle-size: 3
          connection-pool-size: 20
    server:
      enabled: true
      ## host在本地测试可以设置为localhost或者本机IP，在Linux服务器跑可换成服务器IP
      hostname: 0.0.0.0
      ## netty启动端口
      port: 10065
      ## 添加头部版本信息
      add-version-header: true
      ## Ping消息间隔（毫秒），默认25秒。客户端向服务器发送一条心跳消息间隔
      ping-interval: 25000
      ## Ping消息超时时间（毫秒），默认60秒，这个时间间隔内没有接收到心跳消息就会发送超时事件
      ping-timeout: 60000
      ## 设置最大每帧处理数据的长度，防止他人利用大数据来攻击服务器
      max-frame-payload-length: 1048576
      ## 设置http交互最大内容长度
      max-http-content-length: 1048576
      ## socket连接数大小（如只监听一个端口boss线程组为1即可）
      boss-threads: 1
      worker-threads: 100
      ## 协议升级超时时间（毫秒），默认10秒。HTTP握手升级为ws协议超时时间
      upgrade-timeout: 15000
      ## socket配置
      socket-config:
        reuse-address: true
        tcp-no-delay: true
        so-linger: 0
      ack-mode: auto
      allow-custom-requests: true
      ## sessionID 通过请求头io来获取
      random-session: true

# MyBatis Plus 的配置项
mybatis-plus:
  configuration:
    map-underscore-to-camel-case: true # 虽然默认为 true ，但是还是显示去指定下。
  #    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      id-type: NONE # “智能”模式，基于 IdTypeEnvironmentPostProcessor + 数据源的类型，自动适配成 AUTO、INPUT 模式。
      #      id-type: AUTO # 自增 ID，适合 MySQL 等直接自增的数据库
      #      id-type: INPUT # 用户输入 ID，适合 Oracle、PostgreSQL、Kingbase、DB2、H2 数据库
      #      id-type: ASSIGN_ID # 分配 ID，默认使用雪花算法。注意，Oracle、PostgreSQL、Kingbase、DB2、H2 数据库时，需要去除实体类上的 @KeySequence 注解
      logic-delete-value: 1 # 逻辑已删除值(默认为 1)
      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)
  type-aliases-package: ${kugga.info.base-package}.module.*.dal.dataobject

--- #################### 芋道相关配置 ####################

kugga:
  info:
    version: 1.0.0
    base-package: com.hisun.kugga
  web:
    admin-ui:
      url: http://dashboard.kugga.iocoder.cn # Admin 管理后台 UI 的地址
  swagger:
    title: kugga-duke
    description: kugga-duke接口文档
    version: ${kugga.info.version}
    base-package: ${kugga.info.base-package}
  captcha:
    timeout: 5m
    width: 160
    height: 60
  codegen:
    base-package: ${kugga.info.base-package}
    db-schemas: ${spring.datasource.dynamic.datasource.master.name}
  security:
    permit-all-urls:
      - /app-api/system/email/verify-code
      - /app-api/system/email/general
  error-code: # 错误码相关配置项
    constants-class-list:
      - com.hisun.kugga.module.bpm.enums.ErrorCodeConstants
      - com.hisun.kugga.module.infra.enums.ErrorCodeConstants
      - com.hisun.kugga.module.member.enums.ErrorCodeConstants
      - com.hisun.kugga.module.pay.enums.ErrorCodeConstants
      - com.hisun.kugga.module.system.enums.ErrorCodeConstants
  tenant: # 多租户相关配置项
    enable: false
    ignore-urls:
      - /admin-api/system/tenant/get-id-by-name # 基于名字获取租户，不许带租户编号
      - /admin-api/system/captcha/get-image # 获取图片验证码，和租户无关
      - /admin-api/infra/file/*/get/** # 获取图片，和租户无关
      - /admin-api/system/sms/callback/* # 短信回调接口，无法带上租户编号
    ignore-tables:
      - system_tenant
      - system_tenant_package
      - system_dict_data
      - system_dict_type
      - system_error_code
      - system_menu
      - system_sms_channel
      - system_sms_template
      - system_sms_log
      - system_sensitive_word
      - system_oauth2_client
      - infra_codegen_column
      - infra_codegen_table
      - infra_test_demo
      - infra_config
      - infra_file_config
      - infra_file
      - infra_file_content
      - infra_job
      - infra_job_log
      - infra_job_log
      - infra_data_source_config
  sms-code: # 短信验证码相关的配置项
    expire-times: 10m
    send-frequency: 1m
    send-maximum-quantity-per-day: 10
    begin-code: 9999 # 这里配置 9999 的原因是，测试方便。
    end-code: 9999 # 这里配置 9999 的原因是，测试方便。

  s3:
    enable: true


# Actuator 监控端点的配置项
management:
  endpoint:
    shutdown:
      enabled: true
  server:
    port: 9527
  endpoints:
    web:
      base-path: /actuator # Actuator 提供的 API 接口的根目录。默认为 /actuator
      exposure:
        include: '*' # 需要开放的端点。默认值只打开 health 和 info 两个端点。通过设置 * ，可以开放所有端点。


duke:
  kugga:
    language: en-US
