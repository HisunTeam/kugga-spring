spring:
  # 数据源配置项
  autoconfigure:
    exclude:
      - com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure # 排除 Druid 的自动配置，使用 dynamic-datasource-spring-boot-starter 配置多数据源
  datasource:
    druid: # Druid 【监控】相关的全局配置
      web-stat-filter:
        enabled: true
      stat-view-servlet:
        enabled: true
        allow: # 设置白名单，不填则允许所有访问
        url-pattern: /druid/*
        login-username: kugga
        login-password: kuggaadmin!@#
      filter:
        stat:
          enabled: true
          log-slow-sql: true # 慢 SQL 记录
          slow-sql-millis: 100
          merge-sql: true
        wall:
          config:
            multi-statement-allow: true
    dynamic: # 多数据源配置
      druid: # Druid 【连接池】相关的全局配置
        initial-size: 2 # 初始连接数
        min-idle: 5 # 最小连接池数量
        max-active: 20 # 最大连接池数量
        max-wait: 30000 # 配置获取连接等待超时的时间，单位：毫秒
        time-between-eviction-runs-millis: 60000 # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位：毫秒
        min-evictable-idle-time-millis: 300000 # 配置一个连接在池中最小生存的时间，单位：毫秒
        max-evictable-idle-time-millis: 900000 # 配置一个连接在池中最大生存的时间，单位：毫秒
        validation-query: SELECT 1 FROM DUAL # 配置检测连接是否有效
        test-while-idle: true
        test-on-borrow: false
        test-on-return: false
        keep-alive: true
      primary: master
      datasource:
        master:
          name: kugga_db
          url: jdbc:mysql://127.0.0.1:3306/${spring.datasource.dynamic.datasource.master.name}?allowMultiQueries=true&useUnicode=true&useSSL=false&characterEncoding=UTF-8&serverTimezone=UTC&autoReconnect=true&nullCatalogMeansCurrent=true&allowPublicKeyRetrieval=true
          username: kuggaadm
          password: '*****'
  redis:
    host: 127.0.0.1
    port: 6379
    database: 0
    password: '******'
  socketio:
    redis:
      redisson:
        enabled: true
        server: single
        single:
          address: redis://127.0.0.1:6379
          password: '******'
          client-name: socketio-redis

rocketmq:
  name-server: 172.18.0.212:9876
  producer:
    group: ${spring.application.name}
    access-key: "6a1c5bf4-d2e5-4c01-984b-77979bbfe4adrfBd56"
    secret-key: "***"
  consumer:
    access-key: "6a1c5bf4-d2e5-4c01-984b-77979bbfe4adrfBd56"
    secret-key: "***"

  #################### 定时任务相关配置 ####################
  # Quartz 配置项，对应 QuartzProperties 配置类
  quartz:
    auto-startup: false # 本地开发环境，尽量不要开启 Job
    scheduler-name: schedulerName # Scheduler 名字。默认为 schedulerName
    job-store-type: jdbc # Job 存储器类型。默认为 memory 表示内存，可选 jdbc 使用数据库。
    wait-for-jobs-to-complete-on-shutdown: true # 应用关闭时，是否等待定时任务执行完成。默认为 false ，建议设置为 true
    properties: # 添加 Quartz Scheduler 附加属性，更多可以看 http://www.quartz-scheduler.org/documentation/2.4.0-SNAPSHOT/configuration.html 文档
      org:
        quartz:
          # Scheduler 相关配置
          scheduler:
            instanceName: schedulerName
            instanceId: AUTO # 自动生成 instance ID
          # JobStore 相关配置
          jobStore:
            # JobStore 实现类。可见博客：https://blog.csdn.net/weixin_42458219/article/details/122247162
            class: org.springframework.scheduling.quartz.LocalDataSourceJobStore
            isClustered: true # 是集群模式
            clusterCheckinInterval: 15000 # 集群检查频率，单位：毫秒。默认为 15000，即 15 秒
            misfireThreshold: 60000 # misfire 阀值，单位：毫秒。
          # 线程池相关配置
          threadPool:
            threadCount: 25 # 线程池大小。默认为 10 。
            threadPriority: 5 # 线程优先级
            class: org.quartz.simpl.SimpleThreadPool # 线程池类型
    jdbc: # 使用 JDBC 的 JobStore 的时候，JDBC 的配置
      initialize-schema: NEVER # 是否自动使用 SQL 初始化 Quartz 表结构。这里设置成 never ，我们手动创建表结构。

  # Spring Boot Admin 配置项
  boot:
    admin:
      # Spring Boot Admin Client 客户端的相关配置
      client:
        url: http://127.0.0.1:${server.port}/${spring.boot.admin.context-path} # 设置 Spring Boot Admin Server 地址
        instance:
          prefer-ip: true # 注册实例时，优先使用 IP
      # Spring Boot Admin Server 服务端的相关配置
      context-path: /admin # 配置 Spring

#################### 服务保障相关配置 ####################

# Lock4j 配置项
lock4j:
  acquire-timeout: 3000 # 获取分布式锁超时时间，默认为 3000 毫秒
  expire: 30000 # 分布式锁的超时时间，默认为 30 毫秒

# Resilience4j 配置项
resilience4j:
  ratelimiter:
    instances:
      backendA:
        limit-for-period: 1 # 每个周期内，允许的请求数。默认为 50
        limit-refresh-period: 60s # 每个周期的时长，单位：微秒。默认为 500
        timeout-duration: 1s # 被限流时，阻塞等待的时长，单位：微秒。默认为 5s
        register-health-indicator: true # 是否注册到健康监测

#################### 监控相关配置 ####################

# Actuator 监控端点的配置项
management:
  endpoints:
    web:
      exposure:
        include:
          - health
          - info
          - shutdown

# 日志文件配置
logging:
  file:
    name: ${user.home}/logs/${spring.application.name}.log # 日志文件名，全路径
  level:
    # 配置自己写的 MyBatis Mapper 打印日志
    com.hisun.kugga.duke.user.dal.mysql: debug
    com.hisun.kugga.duke.system.dal.mysql: debug
    com.hisun.kugga.module.infra.dal.mysql: debug
    com.hisun.kugga.duke.pay.dal.mysql: debug
    com.hisun.kugga.module.system.dal.mysql: debug
    com.hisun.kugga.module.tool.dal.mysql: debug
    com.hisun.kugga.module.member.dal.mysql: debug
    com.hisun.kugga.duke.chat.dal: debug
    com.hisun.kugga.duke.user.cv.dal.mysql: debug
    com.hisun.kugga.duke.league.dal.mysql: debug
    com.hisun.kugga.duke.forum.dal.mysql: debug

#################### 相关配置 ####################

# 配置项，设置当前项目所有自定义的配置
kugga:
  security:
    mock-enable: false
  xss:
    enable: true
    exclude-urls: # 如下两个 url，仅仅是为了演示，去掉配置也没关系
      - ${spring.boot.admin.context-path}/** # 不处理 Spring Boot Admin 的请求
      - ${management.endpoints.web.base-path}/** # 不处理 Actuator 的请求
      - /app-api/duke/recommendation/league-create # 不处理提交推荐报告
      - /app-api/duke/recommendation/notice-create # 不处理提交推荐报告
      - /app-api/duke/resume/create # 不处理提交个人简历
      - /app-api/duke/resume/update # 不处理提交个人简历
      - /app-api/duke/resume/update # 不处理提交个人简历
      - /app-api/posts/create # 不处理创建贴子
      - /app-api/posts/update-posts # 不处理贴子修改
      - /app-api/posts/reply-posts # 不处理回复贴子
  access-log: # 访问日志的配置项
    enable: true
  error-code: # 错误码相关配置项
    enable: false
  demo: false # 关闭演示模式
  email:
    # roundRobinType:normal 轮询，weighted 权重(需要增加 weight 配置)
    roundRobinType: normal
    properties:
      - host: smtpdm-ap-southeast-1.aliyun.com
        port: 465
        username: noreply@kuggaduke.com
        password: '******'
        protocol: smtp
        available: true
        weight: 2
        properties:
          mail:
            smtp:
              auth: true
              starttls:
                enable: true
              ssl:
                enable: true
  # 论坛
  forum:
    kugga-max:
      login-url: https://www.kuggamax.com/api/v1/login/partnerUser
      client-id: 4e327740f9c64ea98efbbae90d3f2db8
      secret: '******'

  s3:
    enable: true
    type: "S3_UCLOUD"
    ucloud-file-config:
      public-key: "TOKEN_bef1472f-7679-44ae-815f-9eab4d0206d9"
      private-key: "***"
      region: "hk"
      proxy-suffix: "ufileos.com"
      domain: "https://kuggaduke.hk.ufileos.com"
      bucket: "kuggaduke"

  pay:
    charge-success-url: https://www.kuggaduke.com/TransferStatus
    # 钱包
    wallet:
      appid: 5000000001
      app-secret: '******'
      should-sign: true
      sign-type: HMACSHA256
      platform-account: 41559830924304044032
      urls:
        APP_DETAIL: http://wallet.masquebar.xyz/app/detail
        CREATE_ACCOUNT: http://wallet.masquebar.xyz/account/create
        ACCOUNT_DETAIL: http://wallet.masquebar.xyz/account/detail
        PAYMENT_PREPAY: http://wallet.masquebar.xyz/payment/prepay
        PAYMENT_PAY_BY_BALANCE: http://wallet.masquebar.xyz/payment/payByBalance
        PAYMENT_DETAIL: http://wallet.masquebar.xyz/payment/detail
        PAYMENT_CANCEL: http://wallet.masquebar.xyz/payment/cancel
        ALLOCATION_APPLY: http://wallet.masquebar.xyz/allocation/apply
        ALLOCATION_RESULT: http://wallet.masquebar.xyz/allocation/result
        CHARGE_PRECHARGE: http://wallet.masquebar.xyz/charge/preCharge
        CHARGE_DETAIL: http://wallet.masquebar.xyz/charge/detail
        CHARGE_CANCEL: http://wallet.masquebar.xyz/charge/cancel
        DRAWBACK_APPLY: http://wallet.masquebar.xyz/drawback/apply
        DRAWBACK_DETAIL: http://wallet.masquebar.xyz/drawback/detail
        WITHDRAW_TO_PAYPAL: http://wallet.masquebar.xyz/withdraw/toPaypal
        WITHDRAW_DETAIL: http://wallet.masquebar.xyz/withdraw/detail
        REDPACKET_HANDOUT: http://wallet.masquebar.xyz/redPacket/handOut
        REDPACKET_DETAIL: http://wallet.masquebar.xyz/redPacket/detail
        PROOFREADBILL_APPLY: http://wallet.masquebar.xyz/proofreadBill/apply
        PROOFREADBILL_RESULT: http://wallet.masquebar.xyz/proofreadBill/result



duke:
  user:
    region-prefix: 99
    forget-pwd-link-prefix: https://www.kuggaduke.com/forgetPassword
